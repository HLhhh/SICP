#lang sicp
(define (* b n c r)
  (cond ((= 0 n) 0)
        ((= 1 n) b)
        ((not(> n c)) r)
        ((even? (- n c)) (* b n (+ c 2) (+ (double b) r)))
        (else (* b n (+ c 1) (double b)))
        ))
(define (even? n)
  (= (remainder n 2) 0))
(define (double x)
  (+ x x))
(define (halve x)
  (/ x 2))
#lang sicp

(define (fixed-point f f-guess f1)
  (define (y? a b) (< (abs(- a b)) 0.00001))
  (define (iter guess t)
      (define (time x)
                (display x)
                (display "***")
                (newline)
                (display (- (runtime) t)))
    (let ((next (f1 guess (f guess))))
    (if (y? guess next)
        (time guess)
        (iter next t))
      )
    )
  (iter f-guess (runtime))
)
(define (a x y) (/ (+ x y) 2.0))
(define (e x y) y)
;(fixed-point (lambda (x) (/ (log 1000) (log x))) 1.1 a)
